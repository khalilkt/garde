# services:
#   backend:
#     build:
#       context: ./garde_backend
#     command: gunicorn garde_backend.wsgi:application --bind 0.0.0.0:8001
#     # command: python manage.py runserver 0.0.0.0:8001
#     ports:
#       - "8001:8001"
#     volumes:
#       - django_app:/app

#   frontend:
#     build:
#       context: ./garde_frontend
#     volumes:
#       - react_build:/react/build
#   nginx:
#     image: nginx:latest
#     ports:
#       - "8000:80"
#     volumes:
#       - ./nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#       - react_build:/var/www/react
#     environment:
#       - SECRET_KEY=sajdpaosjfosnfsnmasopdkasodkwookaodasd
#       - DEBUG=True
#       - ALLOWED_HOSTS=*
#       - POSTGRES_DB=GARDE_DB
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     depends_on:
#       - backend
#       - frontend
#       - postgres_db

# volumes:
#   react_build:
#   django_app:
#   postgres_data:

version: "3"

services:
  backend:
    build:
      context: ./garde_backend
    command: >
      sh -c "python manage.py migrate &&
            python manage.py loaddata pirogue/fixtures/countries_fixture.json &&
             gunicorn garde_backend.wsgi --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - backend_media:/app/media
    env_file:
      - ./.env
    depends_on:
      - db

  nginx:
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile

    ports:
      - "80:8080"
      - "81:8181"
      - "443:443"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot:ro

    depends_on:
      - backend
      - db

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=GARDE_DB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  backend_media:
  postgres_data:
